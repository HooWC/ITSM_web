@using ITSM_DomainModelEntity.ViewModels
@model AllModelVM
@{
    ViewData["Title"] = "Create_New";
    Layout = "_Layout";
}

<style>
    * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    }

    body {
    font-family: 'Segoe UI', Arial, sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    line-height: 1.5;
    padding: 10px;
    margin: 0;
    min-height: 100vh;
    }
</style>

<div class="inc-cre-container">
    <header class="inc-cre-header">
        <div class="inc-cre-header-left">
            <button class="inc-cre-menu-button">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="3" y1="12" x2="21" y2="12"></line>
                    <line x1="3" y1="6" x2="21" y2="6"></line>
                    <line x1="3" y1="18" x2="21" y2="18"></line>
                </svg>
            </button>
            <div class="inc-cre-title-group">
                <div class="inc-cre-title">Incident Form</div>
                <div class="inc-cre-subtitle">New record</div>
            </div>
        </div>
        <div class="inc-cre-header-right">
            <button class="inc-cre-btn inc-cre-btn-icon" onclick="location.href='/IncidentManagement/All'">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="4" y1="6" x2="20" y2="6"></line>
                    <line x1="4" y1="12" x2="20" y2="12"></line>
                    <line x1="4" y1="18" x2="20" y2="18"></line>
                </svg>
            </button>
            <button class="inc-cre-btn inc-cre-btn-icon" onclick="window.open('/Info/Info_Personal_Todo', '_blank')">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
            </button>
            <button class="inc-cre-btn inc-cre-btn-submit" onclick="document.getElementById('incidentForm').submit();">Submit</button>
            <div class="nav-item navbar-dropdown dropdown-user dropdown open-button">
                <a class="nav-link dropdown-toggle hide-arrow p-0"
                href="javascript:void(0);"
                data-bs-toggle="dropdown">
                    <div class="avatar avatar-online">
                        <img src="@(Model.user.photo != null ? $"data:{Model.user.photo_type};base64," +  Convert.ToBase64String(Model.user.photo) :
                            Url.Content("~/img/avatar/user_avatar.jpg"))" alt="avatar" class="w-px-40 rounded-circle" />
                    </div>
                </a>
            </div>
        </div>
    </header>

    <main class="inc-cre-form-wrapper">

        @if (!string.IsNullOrEmpty(ViewBag.Error as string))
        {
            <div id="error-notification" class="error-notification">
                <div class="error-notification-content">
                    <div class="error-notification-icon">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="10"></circle>
                            <line x1="12" y1="8" x2="12" y2="12"></line>
                            <line x1="12" y1="16" x2="12.01" y2="16"></line>
                        </svg>
                    </div>
                    <div class="error-notification-text">
                        <div class="error-notification-title">Submission failed</div>
                        <div class="error-notification-message" id="error-notification-message">@ViewBag.Error</div>
                    </div>
                </div>
                <button type="button" class="error-notification-close" id="error-notification-close">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </button>
            </div>
        }
        
        <form id="incidentForm" class="inc-cre-incident-form" action="~/IncidentManagement/Create_Form" method="post">
            <div class="inc-cre-form-grid">
                <div class="inc-cre-form-column">
                    <div class="inc-cre-form-group">
                        <label for="number" class="inc-cre-form-label">Number</label>
                        <input type="text" id="number" class="inc-cre-form-control" value="INC-TBD" readonly>
                    </div>

                    <div class="inc-cre-form-group">
                        <label for="caller" class="inc-cre-form-label">Caller</label>
                        <div class="inc-cre-input-with-icon">
                            <input type="text" id="caller" class="inc-cre-form-control" value="@Model.user.fullname" readonly required>
                        </div>
                    </div>

                    <div class="inc-cre-form-group">
                        <label for="category" class="inc-cre-form-label">Category
                            <button type="button" class="inc-cre-btn-help">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <select id="category" name="category" class="inc-cre-form-control">
                            <option value="Hardware" selected>Hardware</option>
                            <option value="Software">Software</option>
                            <option value="Network">Network</option>
                            <option value="Email">Email</option>
                            <option value="Database">Database</option>
                            <option value="Others">Others</option>
                        </select>
                    </div>

                    <div class="inc-cre-form-group">
                        <label for="subcategory" class="inc-cre-form-label">Subcategory
                            <button type="button" class="inc-cre-btn-help">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <select id="subcategory" name="subcategory" class="inc-cre-form-control">
                            <option selected>-- None --</option>
                        </select>
                    </div>

                    <div class="inc-cre-form-group">
                        <label for="assignment-group" class="inc-cre-form-label inc-cre-required">
                            Assignment group
                            <button type="button" class="inc-cre-btn-help">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <div class="inc-cre-input-with-icon">
                            <input type="text" id="assignment-group" autocomplete="off" class="inc-cre-form-control" readonly>
                            <input type="hidden" id="assignment-group-id" name="assignment_group" value="">
                            <button type="button" class="inc-cre-icon-search" id="assignment-group-search">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="11" cy="11" r="8"></circle>
                                    <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="inc-cre-form-column">
                    <div class="inc-cre-form-group">
                        <label for="state" class="inc-cre-form-label">
                            State
                            <button type="button" class="inc-cre-btn-help">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <select id="state" name="state" class="inc-cre-form-control">
                            <option value="Pedding" selected>Pedding</option>
                        </select>
                    </div>

                    <div class="inc-cre-form-group">
                        <label for="impact" class="inc-cre-form-label">
                            Impact
                            <button type="button" class="inc-cre-btn-help">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <select id="impact" name="impact" class="inc-cre-form-control">
                            <option value="1 - High">1 - High</option>
                            <option value="2 - Medium">2 - Medium</option>
                            <option value="3 - Low" selected>3 - Low</option>
                        </select>
                    </div>

                    <div class="inc-cre-form-group">
                        <label for="urgency" class="inc-cre-form-label">
                            Urgency
                            <button type="button" class="inc-cre-btn-help">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <select id="urgency" name="urgency" class="inc-cre-form-control">
                            <option value="1 - High">1 - High</option>
                            <option value="2 - Medium">2 - Medium</option>
                            <option value="3 - Low" selected>3 - Low</option>
                        </select>
                    </div>

                    <div class="inc-cre-form-group">
                        <label for="priority" class="inc-cre-form-label">
                            Priority
                            <button type="button" class="inc-cre-btn-help">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <div class="inc-cre-priority-display">
                            <span id="priority-value" class="inc-cre-priority-value">5 - Planning</span>
                            <input type="hidden" id="priority-hidden" name="priority" value="5 - Planning">
                            <svg class="inc-cre-info-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <line x1="12" y1="16" x2="12" y2="12"></line>
                                <line x1="12" y1="8" x2="12.01" y2="8"></line>
                            </svg>
                        </div>
                    </div>

                    <div class="inc-cre-form-group">
                        <label for="assigned-to" class="inc-cre-form-label">
                            Assigned to
                            <button type="button" class="inc-cre-btn-help">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <div class="inc-cre-input-with-icon">
                            <input type="text" id="assigned-to" class="inc-cre-form-control" readonly>
                            <input type="hidden" id="assigned-to-id" name="assigned_to" value="">
                            <button type="button" class="inc-cre-icon-search" id="assigned-to-search" disabled>
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="11" cy="11" r="8"></circle>
                                    <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="inc-cre-form-group inc-cre-short-description-group">
                <label for="short-description" class="inc-cre-form-label inc-cre-required">Short description</label>
                <div class="inc-cre-input-with-actions">
                    <input autocomplete="off" type="text" id="short-description" name="short_description" class="inc-cre-form-control" required>
                    <div class="inc-cre-action-buttons">
                        <button type="button" class="inc-cre-btn-help">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                <line x1="12" y1="17" x2="12.01" y2="17"></line>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <div class="inc-cre-form-group inc-cre-full-width">
                <label for="description" class="inc-cre-form-label">Description</label>
                <textarea id="description" autocomplete="off" name="describe" class="inc-cre-form-control inc-cre-description-textarea" rows="5"></textarea>
            </div>
        </form>
    </main>

</div>

<div id="inc-cre-modal" class="inc-cre-modal">
    <div class="inc-cre-modal-content">
        <div class="inc-cre-modal-header">
            <h3 id="inc-cre-modal-title">Select</h3>
            <button type="button" class="inc-cre-modal-close">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="18" y1="6" x2="6" y2="18"></line>
                    <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
            </button>
        </div>
        <div class="inc-cre-modal-body">
            <div class="inc-cre-search-wrapper">
                <input type="text" id="inc-cre-search-input" class="inc-cre-form-control" placeholder="Search...">
                <button type="button" class="inc-cre-search-btn">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="8"></circle>
                        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                    </svg>
                </button>
            </div>
            <div class="inc-cre-table-wrapper">
                <table class="inc-cre-modal-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Desc</th>
                        </tr>
                    </thead>
                    <tbody id="inc-cre-modal-table-body">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    $(function () {
      var $target = $('#Incidents_menu');
      if (!$target.hasClass('active') || !$target.hasClass('open')) {
          $('.menu-item').removeClass('active open');
          $target.addClass('active open');
      }

      $('#Incidents_menu_create').addClass("active");

          // Update Priority Logic
      function updatePriority() {
          var impact = $("#impact").val();
          var urgency = $("#urgency").val();
              var priority = "5 - Planning"; // default value
          
          if (impact === "1 - High" && urgency === "1 - High") {
              priority = "1 - Critical";
          } else if ((impact === "1 - High" && urgency === "2 - Medium") || 
                     (impact === "2 - Medium" && urgency === "1 - High")) {
              priority = "2 - High";
          } else if ((impact === "1 - High" && urgency === "3 - Low") || 
                     (impact === "2 - Medium" && urgency === "2 - Medium") || 
                     (impact === "3 - Low" && urgency === "1 - High")) {
              priority = "3 - Moderate";
          } else if ((impact === "2 - Medium" && urgency === "3 - Low") || 
                     (impact === "3 - Low" && urgency === "2 - Medium")) {
              priority = "4 - Low";
          } else if (impact === "3 - Low" && urgency === "3 - Low") {
              priority = "5 - Planning";
          }
          
          $("#priority-value").text(priority);
          $("#priority-hidden").val(priority);
      }
      
      // Update Priority when Impact or Urgency changes
      $("#impact, #urgency").change(function() {
          updatePriority();
      });
      
      // Initialize Priority when the page loads
      updatePriority();
      
      // Define the Subcategory options for each Category
      var subcategories = {
          "Hardware": [
              "Laptop/Desktop",
              "Monitor",
              "Printer",
              "Keyboard/Mouse",
              "Hard Disk",
              "Power Supply",
              "Battery",
              "Peripheral Devices",
              "Other"
          ],
          "Software": [
              "Microsoft Office",
              "IHub",
              "HSG ITSM",
              "ERP System",
              "Website / Web Application",
              "Mobile App",
              "Antivirus",
              "Browser",
              "License Issues",
              "Other"
          ],
          "Network": [
              "Wi-Fi Connectivity",
              "LAN Issue",
              "Internet Down",
              "VPN Problem",
              "Switch/Router",
              "DNS Issue",
              "Network Performance",
              "Other"
          ],
          "Email": [
              "Cannot Send/Receive",
              "Outlook Issue",
              "Email Configuration",
              "Other"
          ],
          "Database": [
              "Connection Failure",
              "Data Corruption",
              "Query Timeout",
              "Backup Failure",
              "Performance Issue",
              "Access Denied",
              "Other"
          ],
          "Others": [
              "General Inquiry",
              "How-To Support",
              "Not Categorized",
              "Scheduled Maintenance",
              "Other"
          ]
      };
      
      // Initialize Subcategory
      function updateSubcategories() {
          var category = $("#category").val();
          var $subcategory = $("#subcategory");
          
          // Clear existing options
          $subcategory.empty();
          
          // Add new option
          if (subcategories[category]) {
              $.each(subcategories[category], function(index, value) {
                  $subcategory.append($("<option></option>").text(value).val(value));
              });
          }
      }
      
      // Initialized when the page loads
      updateSubcategories();
      
      // Update Subcategory when Category selection changes
      $("#category").change(function() {
          updateSubcategories();
      });
      
      // Modal box function
      var currentInputField = null;
      var selectedDepartmentId = null;
      var departmentList = [];
      var usersByDepartment = {};
      
      // Get department data from the server
      function loadDepartments() {
          $.ajax({
              url: '/Ajax/DepartmentData',
              type: 'GET',
              dataType: 'json',
              success: function(data) {
                  departmentList = data;
                  // console.log("Department data loaded successfully:", data);
              },
              error: function(xhr, status, error) {
                  // console.error("Failed to load department data:", error);
              }
          });
      }
      
      // Load department data
      loadDepartments();
      
      // Get user data based on department ID
      function loadUsersByDepartment(departmentId) {
          $.ajax({
              url: '/Ajax/AssignedToData',
              type: 'POST',
              data: { departmentId: departmentId },
              dataType: 'json',
              success: function(data) {
                  if (data && Array.isArray(data)) {
                      usersByDepartment[departmentId] = data;
                      openModal("Select assignees", data, $("#assigned-to"));
                  } else if (data && data.success === false) {
                      // console.error("Failed to obtain user data:", data.message);
                      // alert("Failed to obtain user data: " + data.message);
                  } else {
                      // console.error("The format of the obtained user data is incorrect");
                      // alert("The format of the obtained user data is incorrect");
                  }
              },
              error: function(xhr, status, error) {
                  // console.error("Failed to obtain user data request:", error);
                  // alert("Failed to obtain user data request: " + error);
              }
          });
      }
      
      // Open modal
      function openModal(title, data, targetInput) {
          currentInputField = targetInput;
          
          // Title
          $("#inc-cre-modal-title").text(title);
          
          // Clear and fill the table
          var tableBody = $("#inc-cre-modal-table-body");
          tableBody.empty();
          
          $.each(data, function(index, item) {
              var id = item.id || item.user_id || index;
              var name = item.name || item.fullname || '';
              var description = item.description || item.title || '';
              
              tableBody.append(
                  '<tr data-id="' + id + '" data-name="' + name + '">' +
                  '<td>' + name + '</td>' +
                  '<td>' + description + '</td>' +
                  '</tr>'
              );
          });
          
          // Show modal box
          $("#inc-cre-modal").fadeIn(200);
      }
      
      // Close modal box
      function closeModal() {
          $("#inc-cre-modal").fadeOut(200);
          currentInputField = null;
      }
      
      // Click the Assignment Group search button
      $("#assignment-group-search").on('click', function() {
          if (departmentList && departmentList.length > 0) {
              openModal("Select assignment group", departmentList, $("#assignment-group"));
          } else {
              loadDepartments(); // If the data has not been loaded, reload it
              setTimeout(function() {
                  if (departmentList && departmentList.length > 0) {
                      openModal("选择分配组", departmentList, $("#assignment-group"));
                  } else {
                      // alert("无法加载部门数据，请刷新页面重试");
                  }
              }, 500);
          }
      });
      
      // 点击Assigned To搜索按钮
      $("#assigned-to-search").on('click', function() {
          if (!selectedDepartmentId) {
              // alert("请先选择分配组");
              return;
          }
          
          // 检查是否已有缓存的用户数据
          if (usersByDepartment[selectedDepartmentId]) {
              openModal("选择分配人员", usersByDepartment[selectedDepartmentId], $("#assigned-to"));
          } else {
              loadUsersByDepartment(selectedDepartmentId);
          }
      });
      
      // 点击模态框关闭按钮
      $(".inc-cre-modal-close").click(function() {
          closeModal();
      });
      
      // 点击模态框外部关闭
      $(document).on('click', '.inc-cre-modal', function(e) {
          if ($(e.target).hasClass('inc-cre-modal')) {
              closeModal();
          }
      });
      
      // 选择表格行
      $(document).on('click', '.inc-cre-modal-table tbody tr', function() {
          var selectedName = $(this).data('name');
          var selectedId = $(this).data('id');
          
          if (currentInputField) {
              currentInputField.val(selectedName);
              
              // 如果选择的是部门，则启用Assigned to
              if (currentInputField.attr('id') === 'assignment-group') {
                  selectedDepartmentId = selectedId;
                  $("#assignment-group-id").val(selectedId); // 将ID保存到隐藏输入框
                  $("#assigned-to-search").prop('disabled', false);
                  $("#assigned-to").val(''); // 清空之前选择的用户
                  $("#assigned-to-id").val(''); // 清空之前选择的用户ID
              } else if (currentInputField.attr('id') === 'assigned-to') {
                  // 如果选择的是用户，保存用户ID
                  $("#assigned-to-id").val(selectedId);
              }
          }
          
          closeModal();
      });
      
      // 模态框中的搜索功能
      $("#inc-cre-search-input").on('keyup', function() {
          var value = $(this).val().toLowerCase();
          $(".inc-cre-modal-table tbody tr").filter(function() {
              $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
          });
      });
      
      // 加载部门数据
      loadDepartments();
      
      // Notes部分功能
      // 更新活动数量
      function updateActivityCount() {
          var count = $(".inc-cre-activity-item").length;
          $("#activity-count").text(count);
      }
      
      // 初始化更新活动数量
      updateActivityCount();
      
      // 发布工作笔记
      $(".inc-cre-btn-post").click(function() {
          var workNotes = $("#work-notes").val().trim();
          var isCustomerVisible = $("#customer-visible").is(":checked");
          
          if (workNotes) {
              // 获取当前时间
              var now = new Date();
              var dateString = now.getFullYear() + '-' + 
                              ('0' + (now.getMonth() + 1)).slice(-2) + '-' + 
                              ('0' + now.getDate()).slice(-2) + ' ' + 
                              ('0' + now.getHours()).slice(-2) + ':' + 
                              ('0' + now.getMinutes()).slice(-2) + ':' + 
                              ('0' + now.getSeconds()).slice(-2);
              
              // 创建新的活动项
              var newActivity = $('<div class="inc-cre-activity-item">' +
                  '<div class="inc-cre-user-avatar">' +
                      '<img src="https://www.diydoutu.com/touxiang/20201222-1.jpg" alt="Current User">' +
                  '</div>' +
                  '<div class="inc-cre-activity-content">' +
                      '<div class="inc-cre-activity-header">' +
                          '<span class="inc-cre-user-name">' + $("#assigned-to").val() || '当前用户' + '</span>' +
                          '<span class="inc-cre-activity-time">Work notes • ' + dateString + '</span>' +
                      '</div>' +
                      '<div class="inc-cre-activity-details">' +
                          '<div class="inc-cre-work-note-content">' + workNotes.replace(/\n/g, '<br>') + '</div>' +
                      '</div>' +
                  '</div>' +
              '</div>');
              
              // 添加到活动容器的顶部
              $(".inc-cre-activity-container").prepend(newActivity);
              
              // 清空文本框
              $("#work-notes").val('');
              
              // 更新活动数量
              updateActivityCount();
          } else {
              // alert("请输入工作笔记内容");
          }
      });
    });
</script>

