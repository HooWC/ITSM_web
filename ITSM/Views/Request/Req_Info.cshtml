@using ITSM_DomainModelEntity.ViewModels
@model AllModelVM
@{
    ViewData["Title"] = "Req_Info";
    Layout = "_Layout";
}

<style>
    * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    }

    body {
    font-family: 'Segoe UI', Arial, sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    line-height: 1.5;
    margin: 0;
    min-height: 100vh;
    }

    .inc-file-cre-form-padding {
    padding: 5px 0px 0px 5px;
    }

    .inc-cre-product-image-container {
    margin-bottom: 1.25rem;
    border-radius: 0.375rem;
    overflow: hidden;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);
    max-width: 100%;
    height: auto;
    }

    .inc-cre-product-image-wrapper {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 25%; 
    overflow: hidden;
    background-color: #121212;
    }

    .inc-cre-product-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain; 
    transition: transform 0.5s ease;
    background-color: #121212;
    }

    .inc-cre-product-image-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.4) 50%, transparent 100%);
    padding: 0.75rem 1.25rem;
    color: white;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .inc-cre-product-title {
    margin: 0 0 0.25rem 0;
    font-weight: 600;
    font-size: 1rem;
    }

    .inc-cre-product-description {
    margin: 0;
    opacity: 0.9;
    font-size: 0.75rem;
    }

    .inc-cre-product-image-wrapper:hover .inc-cre-product-image {
    transform: scale(1.03);
    }

    .inc-cre-product-image-wrapper.square {
    padding-bottom: 25%; 
    }

    .inc-cre-product-image.landscape {
    object-position: center;
    }

    .inc-cre-product-image.portrait {
    object-position: center;
    }

    .inc-cre-btn-closed {
    background-color: #6b0e0e;
    transition: all .2s ease-in-out;
    }

    .inc-cre-btn-closed:hover {
    background-color: #590d0d;
    }

    @@media (max-width: 768px) {
    .inc-cre-product-image-wrapper {
    padding-bottom: 35%; 
    }

    .inc-cre-product-image-wrapper.square {
    padding-bottom: 35%;
    }
    }
</style>

<div class="inc-cre-container">
    <header class="inc-cre-header">
        <div class="inc-cre-header-left">
            <button class="inc-cre-menu-button">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none"
                stroke="currentColor" stroke-width="2" stroke-linecap="round"
                stroke-linejoin="round">
                    <path d="M4 21v-4.586a1 1 0 0 1 .293-.707l11-11a1 1 0 0 1 1.414 0l2.586 2.586a1 1 0 0 1 0 1.414l-11 11A1 1 0 0 1 8.586 21H4z"></path>
                </svg>
            </button>
            <div class="inc-cre-title-group">
                <div class="inc-cre-title">Requests Information</div>
                <div class="inc-cre-subtitle">@Model.request.req_id</div>
            </div>
        </div>
        <div class="inc-cre-header-right">
            <button class="inc-cre-btn inc-cre-btn-icon" onclick="window.open('/Info/Form_Info', '_blank')">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
            </button>

            @if (Model.request.state != "Completed" && Model.request.state != "Rejected")
            {
                @if (Model?.request?.assigned_to != null && Model?.user?.id == Model?.request?.assigned_to)
                {
                    <button class="inc-cre-btn inc-cre-btn-closed" id="Rejected_req">Rejected</button>
                    <button class="inc-cre-btn inc-cre-btn-resolve" id="Completed_req">Completed</button>
                    <button class="inc-cre-btn inc-cre-btn-submit" onclick="document.getElementById('incidentForm').submit();">Save</button>
                }else if(Model.user?.id == Model.request?.sender)
                {
                    <button class="inc-cre-btn inc-cre-btn-submit" onclick="document.getElementById('incidentForm').submit();">Save</button>
                }
                else if(Model.user?.department_id == Model.request?.assignment_group && Model.user?.r_manager == true)
                {
                    <button class="inc-cre-btn inc-cre-btn-submit" onclick="document.getElementById('incidentForm').submit();">Save</button>
                }
            }
            else if (Model.request.state == "Rejected")
            {
                @if (Model?.request?.assigned_to != null && Model?.user?.id == Model?.request?.assigned_to)
                {
                    <button class="inc-cre-btn inc-cre-btn-closed" id="reopen-button">Reopened</button>
                }
                else if (Model?.request?.assigned_to == null && Model.user?.Role.role.ToLower() == "admin" && Model.user?.r_manager == true)
                {
                    <button class="inc-cre-btn inc-cre-btn-closed" id="reopen-button">Reopened</button>
                }
            }

        </div>
    </header>

    <main class="inc-cre-form-wrapper">

        <input type="text" name="caller_id" id="caller_id" class="inc-cre-form-control" value="@Model?.request.Sender?.id" style="display:none;" readonly>
        <input type="hidden" id="roleBack_Name" class="inc-cre-form-control" value="@Model.roleBack" readonly>

        @if (!string.IsNullOrEmpty(ViewBag.Error as string))
        {
            <div id="error-notification" class="error-notification">
                <div class="error-notification-content">
                    <div class="error-notification-icon">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="10"></circle>
                            <line x1="12" y1="8" x2="12" y2="12"></line>
                            <line x1="12" y1="16" x2="12.01" y2="16"></line>
                        </svg>
                    </div>
                    <div class="error-notification-text">
                        <div class="error-notification-title">Submission failed</div>
                        <div class="error-notification-message" id="error-notification-message">@ViewBag.Error</div>
                    </div>
                </div>
                <button type="button" class="error-notification-close" id="error-notification-close">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </button>
            </div>
        }

        <div id="resolve-error-notification" class="error-notification" style="display: none;">
            <div class="error-notification-content">
                <div class="error-notification-icon">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="12" y1="8" x2="12" y2="12"></line>
                        <line x1="12" y1="16" x2="12.01" y2="16"></line>
                    </svg>
                </div>
                <div class="error-notification-text">
                    <div class="error-notification-title">Resolution failed</div>
                    <div class="error-notification-message" id="resolve-error-notification-message"></div>
                </div>
            </div>
        </div>


        @if (Model?.request?.req_type == false)
        {
            <form id="incidentForm" class="inc-cre-incident-form" action="~/Request/Req_Info" method="post">
                <input type="text" name="id" id="reqId" class="inc-cre-form-control" value="@Model.request.id" style="display:none;" readonly>
                <input type="hidden" name="roleBack" id="roleBack" class="inc-cre-form-control" value="@Model.roleBack" readonly>
                <input type="text" name="pro_id" id="pro_id" class="inc-cre-form-control" value="@Model.request.pro_id" style="display:none;" readonly>
                <div class="inc-cre-product-image-container">
                    <div class="inc-cre-product-image-wrapper">

                        @if (Model?.request?.Product?.photo != null)
                        {
                            <img src="@(Model.request.Product.photo != null ? $"data:{Model.request.Product.photo_type};base64,{Convert.ToBase64String(Model.request.Product.photo)}" :
                         "https://images.unsplash.com/photo-1555041469-a586c61ea9bc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80")"
                            alt="Selected Product"
                            class="inc-cre-product-image" />
                        }
                        else
                        {
                            <img src="~/img/product/product_base.png"
                            alt="Selected Product"
                            class="inc-cre-product-image" />
                        }

                        <div class="inc-cre-product-image-overlay">
                            <h4 class="inc-cre-product-title">@Model.request.Product?.item_title</h4>
                            <p class="inc-cre-product-description">@Model.request.Product.description</p>
                        </div>
                    </div>
                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="number" class="inc-cre-form-label">Request Number</label>
                            <input type="text" class="inc-cre-form-control" value="@Model.request.req_id" readonly>
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="state" class="inc-cre-form-label">Status</label>
                            @if (Model?.request.state == "Rejected" || Model?.request.state == "Completed")
                            {
                                <input type="text" id="state" name="state" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model?.request.state ?? "")" />
                            }
                            else if (Model?.request?.assigned_to == null && Model?.user?.id != Model?.request?.assigned_to)
                            {
                                <input type="text" id="state" name="state" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model?.request.state ?? "")" />
                            }
                            else if (Model?.request?.assigned_to != null && Model.user?.id == Model.request?.assigned_to)
                            {
                                <select id="state" name="state" class="inc-cre-form-control">
                                    <option value="Pending" selected="@(Model?.request?.state == "Pending")">Pending</option>
                                    <option value="In Progress" selected="@(Model?.request?.state == "In Progress")">In Progress</option>
                                </select>
                            }
                            else
                            {
                                <input type="text" id="state" name="state" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model?.request.state ?? "")" />
                            }
                        </div>
                    </div>

                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="number" class="inc-cre-form-label">User</label>
                            <div class="inc-cre-input-with-icon">
                                <div class="inc-cre-form-control inc-cre-user-link">
                                    <a href="~/User/Form_User_Info?id=@Model.request.Sender?.id" target="_blank">
                                        @(Model.request.Sender?.fullname ?? "")
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="channel" class="inc-cre-form-label">Responsible</label>
                            <input type="text" class="inc-cre-form-control" value="@Model.request.Product?.ResponsibleDepartment?.name" readonly>
                        </div>
                    </div>


                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="quantity" class="inc-cre-form-label">Quantity</label>
                            <input type="number"
                            name="quantity"
                            id="quantity"
                            class="inc-cre-form-control"
                            value="@Model.request?.quantity"
                            min="1"
                            max="@( (Model.request?.quantity ?? 0) + (Model.request?.Product?.quantity ?? 0) )"
                            @(Model.request?.state == "Rejected" || Model.request?.state == "Completed" || Model.user?.id != Model.request?.sender ? "readonly" : "")
                            required>
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="assigned_to" class="inc-cre-form-label">
                                Assigned to
                            </label>
                            @if (Model.request?.AssignedTo?.fullname != null)
                            {
                                @if (Model.user?.department_id == Model.request?.assignment_group && Model.user?.r_manager == true)
                                {
                                    <div class="inc-cre-input-with-icon">
                                        <div class="inc-cre-form-control inc-cre-user-link">
                                            <a id="assigned-to" href="~/User/Form_User_Info?id=@Model.request?.AssignedTo?.id" target="_blank">
                                                @(Model.request?.AssignedTo?.fullname ?? "")
                                            </a>
                                        </div>
                                        <input type="hidden" id="assigned-to-id" name="assigned_to" value="@Model.request.assigned_to">
                                        <button type="button" class="inc-cre-icon-search" id="assigned-to-search" @(Model.request.assignment_group > 0 ? "" : "disabled")>
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <circle cx="11" cy="11" r="8"></circle>
                                                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                                            </svg>
                                        </button>
                                    </div>
                                }
                                else
                                {
                                    <div class="inc-cre-input-with-icon">
                                        <div class="inc-cre-form-control inc-cre-user-link">
                                            <a href="~/User/Form_User_Info?id=@Model.request?.AssignedTo?.id" target="_blank">
                                                @(Model.request?.AssignedTo?.fullname != null ? Model.request?.AssignedTo?.fullname : "-")
                                            </a>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <input type="text" id="assigned_to" name="assigned_to" autocomplete="off" class="inc-cre-form-control" readonly value="-" />
                            }
                        </div>
                    </div>

                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-column">
                            <div class="inc-cre-form-group">
                                <label for="channel" class="inc-cre-form-label">Create Date</label>
                                <input type="text" class="inc-cre-form-control" value="@Model.request.create_date.ToString("yyyy-MM-dd HH:mm:ss")" readonly>
                            </div>
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="channel" class="inc-cre-form-label">Update Date</label>
                            <input type="text" class="inc-cre-form-control" value="@Model.request.update_date.ToString("yyyy-MM-dd HH:mm:ss")" readonly>
                        </div>
                    </div>
                </div>

                <div class="inc-cre-form-group inc-cre-full-width">
                    <label for="description" class="inc-cre-form-label inc-cre-required">Description</label>
                    <textarea id="description"
                    name="description"
                    autocomplete="off"
                    class="inc-cre-form-control inc-cre-description-textarea"
                    rows="6"
                    @(Model.user?.id == Model.request?.sender ? "" : "readonly")>@Model.request?.description?.Trim()</textarea>
                </div>
            </form>
        }
        else
        {
            <form id="incidentForm" class="inc-cre-incident-form" action="~/Request/Req_Info" method="post" enctype="multipart/form-data">
                <input type="text" name="id" id="reqId" class="inc-cre-form-control" value="@Model?.request?.id" style="display:none;" readonly>
                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="number" class="inc-cre-form-label">Number</label>
                            <input type="text" id="number" class="inc-cre-form-control" value="@Model?.request?.req_id" readonly>
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="state" class="inc-cre-form-label">
                                State
                            </label>
                            @if (Model?.request.state == "Rejected" || Model?.request.state == "Completed")
                            {
                                <input type="text" id="state" name="state" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model?.request.state ?? "")" />
                            }
                            else if (Model?.request?.assigned_to == null || Model?.user?.id != Model?.request?.assigned_to)
                            {
                                <input type="text" id="state" name="state" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model?.request.state ?? "")" />
                            }
                            else if (Model?.request?.assigned_to != null && Model.user?.id == Model.request?.assigned_to)
                            {
                                <select id="state" name="state" class="inc-cre-form-control">
                                    <option value="Pending" selected="@(Model?.request?.state == "Pending")">Pending</option>
                                    <option value="In Progress" selected="@(Model?.request?.state == "In Progress")">In Progress</option>
                                </select>
                            }
                            else
                            {
                                <input type="text" id="state" name="state" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model?.request.state ?? "")" />
                            }
                        </div>
                    </div>
                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="caller" class="inc-cre-form-label">Caller</label>
                            <div class="inc-cre-input-with-icon">
                                <div class="inc-cre-form-control inc-cre-user-link">
                                    <a href="~/User/Form_User_Info?id=@Model.request?.Sender?.id" target="_blank">
                                        @(Model.request?.Sender?.fullname ?? "")
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="assigned_to" class="inc-cre-form-label">
                                Assigned to
                            </label>
                            @if (Model.request?.AssignedTo?.fullname != null)
                            {
                                @if (Model.user?.department_id == Model.request?.assignment_group && Model.user?.r_manager == true)
                                {
                                    <div class="inc-cre-input-with-icon">
                                        <div class="inc-cre-form-control inc-cre-user-link">
                                            <a id="assigned-to" href="~/User/Form_User_Info?id=@Model.request?.AssignedTo?.id" target="_blank">
                                                @(Model.request?.AssignedTo?.fullname ?? "")
                                            </a>
                                        </div>
                                        <input type="hidden" id="assigned-to-id" name="assigned_to" value="@Model.request.assigned_to">
                                        <button type="button" class="inc-cre-icon-search" id="assigned-to-search" @(Model.request.assignment_group > 0 ? "" : "disabled")>
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <circle cx="11" cy="11" r="8"></circle>
                                                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                                            </svg>
                                        </button>
                                    </div>
                                }else
                                {
                                    <div class="inc-cre-input-with-icon">
                                        <div class="inc-cre-form-control inc-cre-user-link">
                                            <a href="~/User/Form_User_Info?id=@Model.request?.AssignedTo?.id" target="_blank">
                                                @(Model.request?.AssignedTo?.fullname != null ? Model.request?.AssignedTo?.fullname : "-")
                                            </a>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <input type="text" id="assigned_to" name="assigned_to" autocomplete="off" class="inc-cre-form-control" readonly value="-"/>
                            }
                        </div>
                    </div>
                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="erp_user_account" class="inc-cre-form-label">
                                ERP Type
                            </label>
                            <input type="text" id="erp_user_account" name="erp_user_account" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model.request?.erp_version?.ToLower() == "erp 8" ? "ERP Account" : "ERP")" />
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="erp_report" class="inc-cre-form-label">
                                Create Date
                            </label>
                            <input type="text" id="erp_report" name="erp_report" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model.request?.create_date.ToString("yyyy-MM-dd HH:mm:ss"))" />
                        </div>
                    </div>
                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="erp_user_account" class="inc-cre-form-label">
                                ERP Account
                            </label>
                            <input type="text"
                            id="erp_user_account"
                            name="erp_user_account"
                            autocomplete="off"
                            class="inc-cre-form-control"
                            @(Model.user?.id == Model.request?.sender ? "" : "readonly")
                            value="@Model.request?.erp_user_account" />

                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="erp_report" class="inc-cre-form-label">
                                New Report
                            </label>
                            @if (Model.user?.id == Model.request?.sender)
                            {
                                <select id="erp_report" name="erp_report" class="inc-cre-form-control">
                                    @{
                                        var selectReport = Model.request?.erp_report;
                                    }
                                    <option value="true" selected="@(selectReport == true ? "selected" : null)">Yes</option>
                                    <option value="false" selected="@(selectReport == false ? "selected" : null)">No</option>
                                </select>
                            }
                            else
                            {
                                <input type="text" id="erp_report" name="erp_report" autocomplete="off" class="inc-cre-form-control" readonly value="@(Model.request?.erp_report == true ? "Yes" : "No")" />
                            }
                        </div>
                    </div>
                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="erp_category" class="inc-cre-form-label">
                                Category
                            </label>
                            @if (Model.user?.id == Model.request?.sender && Model.reqCategoryList != null)
                            {
                                <select id="erp_category" name="erp_category" class="inc-cre-form-control" required>
                                    @{
                                        var selectReqCategory = Model.request?.erp_category;
                                    }
                                    @foreach (var category in Model.reqCategoryList)
                                    {
                                        <option value="@category.id" selected="@(selectReqCategory == category.id ? "selected" : null)">@category.name</option>
                                    }
                                </select>
                            }
                            else
                            {
                                <input type="text" id="erp_category" name="erp_category" autocomplete="off" class="inc-cre-form-control" readonly value="@Model.request?.ERPCategory?.name" />
                            }
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="erp_subcategory" class="inc-cre-form-label">
                                Subcategory
                            </label>
                            @if (Model.user?.id == Model.request?.sender)
                            {
                                <select id="erp_subcategory" name="erp_subcategory" class="inc-cre-form-control" required>
                                </select>
                            }
                            else
                            {
                                <input type="text" id="erp_subcategory" name="erp_subcategory" autocomplete="off" class="inc-cre-form-control" readonly value="@Model.request?.ERPSubcategory?.name" />
                            }
                        </div>
                    </div>
                </div>

                <div class="inc-cre-form-grid">
                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="erp_function" class="inc-cre-form-label">
                                Subcategory Function
                            </label>
                            @if (Model.user?.id == Model.request?.sender)
                            {
                                <select id="erp_function" name="erp_function" class="inc-cre-form-control" required>
                                </select>
                            }
                            else
                            {
                                <input type="text" id="erp_function" name="erp_function" autocomplete="off" class="inc-cre-form-control" readonly value="@Model.request?.ERPFunction?.name" />
                            }
                        </div>
                    </div>

                    <div class="inc-cre-form-column">
                        <div class="inc-cre-form-group">
                            <label for="erp_module" class="inc-cre-form-label">
                                Module ID
                            </label>
                            <input type="text"
                            id="erp_module"
                            name="erp_module"
                            autocomplete="off"
                            class="inc-cre-form-control"
                            @(Model.user?.id == Model.request?.sender ? "" : "readonly")
                            value="@Model.request?.erp_module" />
                        </div>
                    </div>
                </div>

                @if (Model.user?.id == Model.request?.sender || (Model.request?.assigned_to != null && Model.user?.id == Model.request?.assigned_to))
                {
                    <div class="inc-cre-form-group inc-cre-full-width">
                        <label for="file" class="inc-cre-form-label">
                            Pictures (Maximum size per file: 50MB)
                            <button type="button" class="inc-cre-btn-help" onclick="window.open('/Info/Photo_Info', '_blank')">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                </svg>
                            </button>
                        </label>
                        <input type="file" name="files" id="file" multiple class="inc-cre-form-control inc-file-cre-form-padding">
                    </div>
                }

                <div class="inc-cre-form-group inc-cre-full-width">
                    <label for="description" class="inc-cre-form-label">Description</label>
                    <textarea id="description"
                              name="description"
                              autocomplete="off"
                              class="inc-cre-form-control inc-cre-description-textarea"
                              rows="5"
                              @(Model.user?.id == Model.request?.sender ? "" : "readonly")>@Model.request?.description?.Trim()</textarea>
                </div>
            </form>
        }
    
    </main>

    @if (Model.reqPhotoList != null)
    {
        <div class="inc-cre-related-search-container">
            <button class="inc-cre-btn inc-cre-btn-related-search">
                Pictures
            </button>
        </div>

        <div class="inc-cre-tab-section">
            <div class="inc-cre-tabs">
                <button class="inc-cre-tab active">Event related pictures</button>
            </div>

            <div class="inc-cre-tab-content">
                <div id="notes-tab" class="inc-cre-tab-pane active">
                    <div class="inc-cre-notes-container">
                        <div class="inc-cre-images-container">
                            <div class="inc-cre-images-grid">
                                @foreach (var i in Model.reqPhotoList)
                                {
                                    <div class="inc-cre-image-item" onclick="showImage('@(i.photo != null ? $"data:{i.photo_type};base64,{Convert.ToBase64String(i.photo)}" : "")')">
                                        <img src="@(i.photo != null ? $"data:{i.photo_type};base64,{Convert.ToBase64String(i.photo)}" : "")"
                                             alt="incident photo">
                                        <div class="inc-cre-image-overlay">
                                            <span class="inc-cre-image-zoom">
                                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                    <circle cx="11" cy="11" r="8"></circle>
                                                    <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                                                    <line x1="11" y1="8" x2="11" y2="14"></line>
                                                    <line x1="8" y1="11" x2="14" y2="11"></line>
                                                </svg>
                                            </span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <div id="imageModal" class="image-modal">
                            <button class="image-close-btn"></button>
                            <div class="image-modal-content">
                                <img id="modalImage" src="" alt="Zoomed Image">
                            </div>
                        </div>

                        <script>
                            function showImage(src) {
                                var modal = document.getElementById('imageModal');
                                var modalImg = document.getElementById('modalImage');
                                modal.style.display = "block";
                                modalImg.src = src;
                            }

                            document.querySelector('.image-close-btn').onclick = function() {
                                document.getElementById('imageModal').style.display = "none";
                            }

                            document.getElementById('imageModal').onclick = function(e) {
                                if (e.target === this || e.target.id === 'modalImage') {
                                    this.style.display = "none";
                                }
                            }

                            document.addEventListener('keydown', function(e) {
                                if (e.key === 'Escape') {
                                    document.getElementById('imageModal').style.display = "none";
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    }


    @if (Model.request.state == "Completed" || Model.request.state == "Rejected" || Model.user?.id == Model.request.assigned_to)
    {
        <div class="inc-cre-related-search-container">
            <button class="inc-cre-btn inc-cre-btn-related-search">
                Resolve
            </button>
        </div>

        <div class="inc-cre-tab-section">
            <div class="inc-cre-tabs">
                <button class="inc-cre-tab active">Resolve</button>
            </div>

            <div class="inc-cre-tab-content">
                <div id="notes-tab" class="inc-cre-tab-pane active">
                    <div class="inc-cre-resolve-container">
                        <div class="inc-cre-notes-header">
                            <div class="inc-cre-watch-list">
                                <span>Resolve Reason</span>
                                <button type="button" class="inc-cre-btn-help" style="margin-left:5px;" onclick="window.open('/Info/Resolve_Reason_Info', '_blank')">
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                                        <line x1="12" y1="17" x2="12.01" y2="17"></line>
                                    </svg>
                                </button>
                            </div>
                        </div>

                        <div class="inc-cre-resolve-input-area" id="resolve-input-area">
                            <select id="resolve-type" name="resolveType" class="inc-cre-form-control inc-cre-resolve-select">
                                <option value="">-- Select Resolution Type --</option>
                                <optgroup label="Technical Resolution">
                                    <option value="Permanent Fix">Permanent Fix</option>
                                    <option value="Configuration Change">Configuration Change</option>
                                    <option value="Patch/Update Applied">Patch/Update Applied</option>
                                    <option value="Hardware Replacement">Hardware Replacement</option>
                                    <option value="Script/Automation">Script/Automation</option>
                                    <option value="Work Around">Work Around</option>
                                    <option value="Automatically Resolved">Automatically Resolved</option>
                                </optgroup>
                                <optgroup label="Non-Technical Resolution">
                                    <option value="User Education">User Education</option>
                                    <option value="Vendor Support">Vendor Support</option>
                                    <option value="Out of Scope">Out of Scope</option>
                                    <option value="No Issue Found">No Issue Found</option>
                                    <option value="Not Fixed">Not Fixed</option>
                                    <option value="Known Error">Known Error</option>
                                </optgroup>
                                <option value="Resolved">Resolved</option>
                            </select>
                            <textarea id="resolve-notes" name="resolveNotes" class="inc-cre-notes-textarea" placeholder="Enter resolution details..."></textarea>
                        </div>

                        @if (Model.request.state == "Completed" || Model.request.state == "Rejected")
                        {
                            <div class="inc-cre-resolve-history-section resolution-history-section" id="resolution-history-section">
                                <h3 class="inc-cre-section-title">Resolution Information</h3>
                                <div class="inc-cre-resolve-history-container">
                                    <div id="resolution-history-content">
                                        @* Resolved History *@
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

</div>

<div id="inc-cre-modal" class="inc-cre-modal">
    <div class="inc-cre-modal-content">
        <div class="inc-cre-modal-header">
            <h3 id="inc-cre-modal-title">Select</h3>
            <button type="button" class="inc-cre-modal-close">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="18" y1="6" x2="6" y2="18"></line>
                    <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
            </button>
        </div>
        <div class="inc-cre-modal-body">
            <div class="inc-cre-search-wrapper">
                <input type="text" id="inc-cre-search-input" class="inc-cre-form-control" placeholder="Search...">
                <button type="button" class="inc-cre-search-btn">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="8"></circle>
                        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                    </svg>
                </button>
            </div>
            <div class="inc-cre-table-wrapper">
                <table class="inc-cre-modal-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Desc</th>
                        </tr>
                    </thead>
                    <tbody id="inc-cre-modal-table-body">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div id="imageModal" class="image-modal">
    <button class="image-close-btn"></button>
    <div class="image-modal-content">
        <img id="modalImage" src="" alt="Zoomed Image">
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script>
    var requestState = "@Model.request.state";
    var requestAssignmentGroup = @(Model.request.assignment_group > 0 ? Model.request.assignment_group : "null");
    var selectedSubcategoryId = @(Model.request?.ERPSubcategory?.id != null ? Model.request?.ERPSubcategory?.id : 0);
    var selectedFunctionId = @(Model.request?.ERPFunction?.id != null ? Model.request?.ERPFunction?.id : 0);
    var isERPRequest = @(Model.request?.req_type == true ? "true" : "false");

    $(function () {
        var $target = $('#Requests_menu');
        if (!$target.hasClass('active') || !$target.hasClass('open')) {
            $('.menu-item').removeClass('active open');
            $target.addClass('active open');
        }

        let roleBack = $('#roleBack_Name').val();
        if(roleBack.includes("Admin")){
            $('#Requests_child_all').addClass("active");
        }
        else if(roleBack.includes("Group")){
            $('#Requests_child_assigned').addClass("active");
        }else if(roleBack.includes("User")){
            $('#Requests_child_all_User').addClass("active");
        }else if(roleBack.includes("Tome")){
            $('#Requests_child_assigned').addClass("active");
        }

        if (isERPRequest) {
            if ($('#erp_category').is('select')) {
                var initialCategoryId = $('#erp_category').val();
                if (initialCategoryId) {
                    $.ajax({
                        url: window.AppRoot + 'Ajax/GetSubcategoriesByCategory',
                        type: 'GET',
                        data: { categoryId: initialCategoryId },
                        success: function(response) {
                            if (response.success) {
                                var subcategories = response.data;
                                if (subcategories && subcategories.length > 0) {
                                    $('#erp_subcategory').prop('disabled', false);
                                    
                                    subcategories.forEach(function(item) {
                                        var option = $('<option></option>')
                                            .val(item.id)
                                            .text(item.name);
                                        
                                        if (item.id == selectedSubcategoryId) {
                                            option.prop('selected', true);
                                        }
                                        
                                        $('#erp_subcategory').append(option);
                                    });

                                    var selectedSubcategory = $('#erp_subcategory').val();
                                    if (selectedSubcategory) {
                                        loadFunctions(selectedSubcategory);
                                    }
                                }
                            }
                        }
                    });
                }
            }

            $('#erp_category').change(function() {
                var categoryId = $(this).val();
                
                $('#erp_subcategory').empty().prop('disabled', true);
                $('#erp_function').empty().prop('disabled', true);
                
                if (categoryId) {
                    $.ajax({
                        url: window.AppRoot + 'Ajax/GetSubcategoriesByCategory',
                        type: 'GET',
                        data: { categoryId: categoryId },
                        success: function(response) {
                            if (response.success) {
                                var subcategories = response.data;
                                if (subcategories && subcategories.length > 0) {
                                    $('#erp_subcategory').prop('disabled', false);
                                    
                                    subcategories.forEach(function(item) {
                                        $('#erp_subcategory').append(
                                            $('<option></option>').val(item.id).text(item.name)
                                        );
                                    });
                                    
                                    $('#erp_subcategory').trigger('change');
                                }
                            }
                        }
                    });
                }
            });

            $('#erp_subcategory').change(function() {
                var subcategoryId = $(this).val();
                loadFunctions(subcategoryId);
            });
        }

        function loadFunctions(subcategoryId) {
            $('#erp_function').empty().prop('disabled', true);
            
            if (subcategoryId) {
                $.ajax({
                    url: window.AppRoot + 'Ajax/GetFunctionsBySubcategory',
                    type: 'GET',
                    data: { subcategoryId: subcategoryId },
                    success: function(response) {
                        if (response.success) {
                            var functions = response.data;
                            if (functions && functions.length > 0) {
                                $('#erp_function').prop('disabled', false);
                                
                                functions.forEach(function(item) {
                                    var option = $('<option></option>')
                                        .val(item.id)
                                        .text(item.name);
                                    
                                    if (item.id == selectedFunctionId) {
                                        option.prop('selected', true);
                                    }
                                    
                                    $('#erp_function').append(option);
                                });
                            }
                        }
                    }
                });
            }
        }
    });
</script>
<script src="~/js/Request/Req_Info.js"></script>
